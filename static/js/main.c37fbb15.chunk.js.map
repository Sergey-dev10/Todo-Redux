{"version":3,"sources":["components/Title/Title.js","components/TaskAddition/TaskAddition.styles.js","actions/actionTypes.js","actions/index.js","components/TaskAddition/TaskAddition.js","common/devices.js","components/TaskList/TaskList.styles.js","components/Task/Task.styles.js","components/Task/Task.js","components/TasksFilter/TasksFilter.styles.js","components/TasksFilter/TasksFilter.js","components/TaskSearch/TaskSearch.styles.js","components/TaskSearch/TaskSearch.js","components/TaskList/TaskList.js","App.js","reducers/todoReducer.js","reducers/filterReducer.js","reducers/searchReducer.js","reducers/index.js","store/store.js","index.js"],"names":["Title","TaskAdditionWrapper","styled","form","InputSubmit","input","InputAddField","actionTypes","ADD_TASK","COMPLITE_TASK","REMOVE_TASK","SET_FILTER","SEARCH_TASK","TaskAddition","dispatch","useDispatch","useSelector","todo","useState","inPutValue","setInputValue","onSubmit","event","task","preventDefault","id","nanoid","text","type","payload","placeholder","value","onChange","target","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","TaskListWrapper","div","SearchFilterWrapper","ButtonComplite","button","ButtonRemove","ButtonsWrapper","TaskWrapper","TextWrapper","p","complition","Task","isComplited","onClick","compliteTask","removeTask","ButtonDone","pressed","ButtonActive","ButtonAll","TaskFilterWrapper","TasksFilter","tasks","isAllBtn","isActiveBtn","isDoneBtn","activeBtn","filterType","InputSearch","TaskSearch","despatch","InputValue","trim","searchTask","TaskList","currentFilter","searchedText","search","filter","includes","map","App","className","initialState","rootReducer","combineReducers","state","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c37fbb15.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Title = () => <h1>Todo List</h1>;\n","import styled from 'styled-components';\n\nexport const TaskAdditionWrapper = styled.form`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 15px;\n`;\n\nexport const InputSubmit = styled.input`\n    height: 29px;\n    border: 1px solid #000000; \n    border-radius: 3px;\n    background-color: #FFFFFF;\n`;\n\nexport const InputAddField = styled.input`\n    width: 75%;\n    height: 29px;\n    padding-left: 5px;\n    box-sizing: border-box;\n    border: 1px solid #000000;\n    border-radius: 3px;\n`;\n","export const actionTypes = {\n  ADD_TASK: 'ADD_TASK',\n  COMPLITE_TASK: 'COMPLITE_TASK',\n  REMOVE_TASK: 'REMOVE_TASK',\n  SET_FILTER: 'SET_FILTER',\n  SEARCH_TASK: 'SEARCH_TASK',\n};\n","import { actionTypes } from './actionTypes';\n\nconst {\n  ADD_TASK, COMPLITE_TASK, REMOVE_TASK, SET_FILTER, SEARCH_TASK,\n} = actionTypes;\n\nexport const addTask = (task) => ({\n  type: ADD_TASK,\n  payload: task,\n});\n\nexport const compliteTask = (id) => ({\n  type: COMPLITE_TASK,\n  payload: id,\n});\n\nexport const removeTask = (id) => ({\n  type: REMOVE_TASK,\n  payload: id,\n});\n\nexport const showAll = () => ({\n  type: SET_FILTER,\n  payload: 'SHOW_ALL',\n});\n\nexport const showActive = () => ({\n  type: SET_FILTER,\n  payload: 'SHOW_ACTIVE',\n});\n\nexport const showADone = () => ({\n  type: SET_FILTER,\n  payload: 'SHOW_DONE',\n});\n\nexport const searchTask = (text) => ({\n  type: SEARCH_TASK,\n  payload: text,\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { TaskAdditionWrapper, InputAddField, InputSubmit } from './TaskAddition.styles';\nimport { addTask } from '../../actions';\n\nexport const TaskAddition = () => {\n  const dispatch = useDispatch();\n  const tasks = useSelector(({ todo }) => todo);\n  const [inPutValue, setInputValue] = useState('');\n  const onChangeInput = (event) => {\n    const { value } = event.target;\n    setInputValue(value);\n  };\n  const onAddTask = (event) => {\n    event.preventDefault();\n    if (inPutValue) {\n      dispatch(addTask({ id: nanoid(), text: inPutValue }));\n      setInputValue('');\n    }\n  };\n\n  return (\n    <TaskAdditionWrapper onSubmit={onAddTask}>\n      <InputAddField\n        type=\"text\"\n        placeholder=\"What needs to be done\"\n        value={inPutValue}\n        onChange={onChangeInput}\n      />\n      <InputSubmit type=\"submit\" value=\"Add task\" />\n    </TaskAdditionWrapper>\n  );\n};\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devices';\n\nexport const TaskListWrapper = styled.div`\n    width: 28%;\n    min-height: 200px;\n    margin: 10% auto;\n\n    @media ${device.mobileS} { \n        width: 100%;\n    }\n    @media ${device.tablet} { \n        width: 55%;\n    }\n    @media ${device.laptop} { \n        width: 42%;\n    }\n    @media ${device.laptopL} { \n        width: 30%;\n    }\n    @media ${device.desktopL} { \n        width: 25%;\n    }\n`;\n\nexport const SearchFilterWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 10px;\n`;\n","import styled from 'styled-components';\nimport { device } from '../../common/devices';\n\nexport const ButtonComplite = styled.button`\n    height: 29px;\n    border: 1px solid #47A76A; \n    border-radius: 3px;\n    background-color: #FFFFFF;\n`;\n\nexport const ButtonRemove = styled(ButtonComplite)`\n    border: 1px solid #A12312;\n`;\n\nexport const ButtonsWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 30%;\n\n    @media ${device.mobileS} { \n        width: 45%;\n    }\n    @media ${device.mobileM} { \n        width: 38%;\n    }\n    @media ${device.mobileL} { \n        width: 33%;\n    }\n    @media ${device.laptop} { \n        width: 30%;\n    }\n    @media ${device.desktop} { \n        width: 25%;\n    }\n    @media ${device.desktopL} { \n        width: 20%;\n    }\n`;\n\nexport const TaskWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    border-bottom: 1px solid #000000;\n`;\n\nexport const TextWrapper = styled.p`\n    width: 50%;  \n    text-decoration: ${({ complition }) => (complition ? 'line-through' : 'none')};\n    word-wrap: break-word;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { compliteTask, removeTask } from '../../actions';\nimport {\n  TaskWrapper,\n  TextWrapper,\n  ButtonsWrapper,\n  ButtonComplite,\n  ButtonRemove,\n} from './Task.styles';\n\nexport const Task = ({\n  id, isComplited, text,\n}) => {\n  const dispatch = useDispatch();\n  const onComplite = () => {\n    dispatch(compliteTask(id));\n  };\n  const onRemove = () => {\n    dispatch(removeTask(id));\n  };\n\n  return (\n    <TaskWrapper>\n      <TextWrapper complition={isComplited}>{text}</TextWrapper>\n      <ButtonsWrapper>\n        <ButtonComplite\n          type=\"button\"\n          onClick={onComplite}\n        >\n          Complite\n        </ButtonComplite>\n        <ButtonRemove\n          type=\"button\"\n          onClick={onRemove}\n        >\n          Remove\n        </ButtonRemove>\n      </ButtonsWrapper>\n    </TaskWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devices';\n\nexport const ButtonDone = styled.button`\n    width: 33.3%;\n    height: 100%;    \n    border: none;\n    background-color: ${({ pressed }) => (pressed ? '#185AFF' : '#FFFFFF')};\n`;\n\nexport const ButtonActive = styled(ButtonDone)`\n    border-right: 1px solid #000000;\n`;\n\nexport const ButtonAll = styled(ButtonDone)`\n    border-right: 1px solid #000000;   \n`;\n\nexport const TaskFilterWrapper = styled.div`\n    width: 32%;\n    height: 29;\n    border: 1px solid #000000; \n    border-radius: 3px;\n    background-color: #FFFFFF;\n\n    @media ${device.mobileS} { \n        width: 45%;\n    }\n    @media ${device.mobileL} { \n        width: 33%;\n    }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showAll, showActive, showADone } from '../../actions';\nimport {\n  TaskFilterWrapper, ButtonAll, ButtonActive, ButtonDone,\n} from './TasksFilter.styles';\n\nexport const TasksFilter = ({ tasks }) => {\n  let isAllBtn; let isActiveBtn; let\n    isDoneBtn = false;\n  const activeBtn = useSelector(({ filterType }) => filterType.filterType);\n\n  if (activeBtn === 'SHOW_ALL') {\n    isAllBtn = true;\n  } else if (activeBtn === 'SHOW_ACTIVE') {\n    isActiveBtn = true;\n  } else if (activeBtn === 'SHOW_DONE') {\n    isDoneBtn = true;\n  }\n\n  const dispatch = useDispatch();\n  const onShowAll = () => {\n    dispatch(showAll());\n  };\n  const onShowActive = () => {\n    dispatch(showActive());\n  };\n  const onShowDone = () => {\n    dispatch(showADone());\n  };\n  return (\n    <TaskFilterWrapper>\n      <ButtonAll pressed={isAllBtn} onClick={onShowAll}>All</ButtonAll>\n      <ButtonActive pressed={isActiveBtn} onClick={onShowActive}>Active</ButtonActive>\n      <ButtonDone pressed={isDoneBtn} onClick={onShowDone}>Done</ButtonDone>\n    </TaskFilterWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devices';\n\nexport const InputSearch = styled.input`\n    width: 60%;\n    height: 25px;\n    padding-left: 5px;\n    border: 1px solid #000000;\n    border-radius: 3px;\n\n    @media ${device.mobileS} { \n        width: 50%;\n    }\n    @media ${device.mobileL} { \n        width: 60%;\n    }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { InputSearch } from './TaskSearch.styles';\nimport { searchTask } from '../../actions';\n\nexport const TaskSearch = () => {\n  const despatch = useDispatch();\n  const [InputValue, setInputValue] = useState('');\n  const onChangeInput = (event) => {\n    const text = event.target.value.trim();\n    setInputValue(text);\n    despatch(searchTask(text));\n  };\n  return (\n    <InputSearch type=\"text\" placeholder=\"type to search\" value={InputValue} onChange={onChangeInput} />\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Title } from '../Title';\nimport { TaskAddition } from '../TaskAddition';\nimport { TaskListWrapper, SearchFilterWrapper } from './TaskList.styles';\nimport { Task } from '../Task';\nimport { TasksFilter } from '../TasksFilter';\nimport { TaskSearch } from '../TaskSearch';\n\nexport const TaskList = () => {\n  let tasks = useSelector(({ todo }) => todo.todo);\n  const currentFilter = useSelector(({ filterType }) => filterType.filterType);\n  const searchedText = useSelector(({ search }) => search.text);\n\n  if (currentFilter === 'SHOW_ACTIVE') {\n    tasks = tasks.filter((task) => task.isComplited === false);\n  } else if (currentFilter === 'SHOW_DONE') {\n    tasks = tasks.filter((task) => task.isComplited === true);\n  }\n  if (searchedText) {\n    tasks = tasks.filter((task) => task.text.includes(searchedText));\n  }\n\n  return (\n    <TaskListWrapper>\n      <Title />\n      <TaskAddition />\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          id={task.id}\n          isComplited={task.isComplited}\n          text={task.text}\n        />\n      ))}\n      <SearchFilterWrapper>\n        <TaskSearch />\n        <TasksFilter tasks={tasks} />\n      </SearchFilterWrapper>\n    </TaskListWrapper>\n  );\n};\n","import React from 'react';\nimport { TaskList } from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskList />\n    </div>\n  );\n}\n\nexport default App;\n","import { actionTypes } from '../actions/actionTypes';\n\nconst initialState = {\n  todo: [],\n};\n\nconst {\n  ADD_TASK,\n  COMPLITE_TASK,\n  REMOVE_TASK,\n} = actionTypes;\nexport const todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return {\n        ...state,\n        todo:\n        [...state.todo, { id: action.payload.id, isComplited: false, text: action.payload.text }],\n      };\n    case COMPLITE_TASK:\n      return {\n        ...state,\n        todo: [...state.todo.map((task) => (task.id === action.payload\n          ? { ...task, isComplited: !task.isComplited } : task))],\n      };\n    case REMOVE_TASK:\n      return {\n        ...state, todo: [...state.todo.filter(((task) => task.id !== action.payload))],\n      };\n    default:\n      return state;\n  }\n};\n","import { actionTypes } from '../actions/actionTypes';\n\nconst { SET_FILTER } = actionTypes;\n\nconst initialState = {\n  filterType: 'SHOW_ALL',\n};\n\nexport const filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return { ...state, filterType: action.payload };\n    default:\n      return state;\n  }\n};\n","import { actionTypes } from '../actions/actionTypes';\n\nconst initialState = {\n  text: '',\n};\n\nconst { SEARCH_TASK } = actionTypes;\n\nexport const searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_TASK:\n      return { ...state, text: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { todoReducer } from './todoReducer';\nimport { filterReducer } from './filterReducer';\nimport { searchReducer } from './searchReducer';\n\nexport const rootReducer = combineReducers({\n  todo: todoReducer,\n  filterType: filterReducer,\n  search: searchReducer,\n});\n","import { createStore } from 'redux';\nimport { rootReducer } from '../reducers';\n\n/* eslint-disable no-underscore-dangle */\nexport const store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}